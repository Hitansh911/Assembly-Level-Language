	section .data
	x db 1 , 2 , 3 , 0    ; Declares a byte array x containing the numbers 1, 2, 3, and 0 (0 marks the end of the array).
	
	section .bss
	sum resb 2            ; Reserves 2 bytes for storing the resulting
	
	section .text
	global _start
	_start:

	mov eax , 4         
	mov ebx , 0 
	mov ecx , x
	
	t:                   ;  Label for the loop
	add ebx , [ecx]      ; Add the value at the memory address in ecx to ebx.
	add ecx , 1          ; Move to the next element in the array
	dec eax              ;  Decrement the counter (eax)
	jnz t                ; Jump back to t: if eax is not zero.

	add ebx , '0'        ;  Convert the sum in ebx to its ASCII
	mov [sum] , ebx      ; Store the ASCII character in sum.

	mov eax , 4          ; Sys call for write (printf command of C )
	mov ebx , 1
	mov ecx , sum
	mov edx , 2
	int 80h

	mov eax , 1          ; EXIT
	mov ebx , 0	
	int 80h
